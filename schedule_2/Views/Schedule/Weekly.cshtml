@model schedule_2.Models.Schedule
@using System.Linq
@using System.Security.Claims

@{
    ViewData["Title"] = "Тижневий розклад";
    var weekDays = ViewBag.WeekDays as List<DateTime>;
    var timeSlots = ViewBag.TimeSlots as List<(TimeSpan Start, TimeSpan End, string Label)>;
    var weeklySchedule = ViewBag.WeeklySchedule as Dictionary<DateTime, Dictionary<TimeSpan, List<Event>>>;
    var currentDate = ViewBag.CurrentDate as DateTime?;
    var previousWeek = ViewBag.PreviousWeek as DateTime?;
    var nextWeek = ViewBag.NextWeek as DateTime?;
    var showOnlyMine = ViewBag.ShowOnlyMine as bool? ?? false;
    var isTeacher = ViewBag.IsTeacher as bool? ?? false;
    var currentTeacher = ViewBag.CurrentTeacher as Teacher;
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>Тижневий розклад: @Model.Name</h2>
    <div class="week-navigation-container">
        <a asp-action="Weekly" asp-route-id="@Model.Id" asp-route-date="@previousWeek?.ToString("yyyy-MM-dd")"
           asp-route-showOnlyMine="@showOnlyMine.ToString().ToLower()"
           class="btn week-navigation-btn btn-prev">
            <i class="bi bi-arrow-left"></i> Попередній тиждень
        </a>
        <a asp-action="Weekly" asp-route-id="@Model.Id" asp-route-date="@DateTime.Today.ToString("yyyy-MM-dd")"
           asp-route-showOnlyMine="@showOnlyMine.ToString().ToLower()"
           class="btn week-navigation-btn btn-current">
            Поточний тиждень
        </a>
        <a asp-action="Weekly" asp-route-id="@Model.Id" asp-route-date="@nextWeek?.ToString("yyyy-MM-dd")"
           asp-route-showOnlyMine="@showOnlyMine.ToString().ToLower()"
           class="btn week-navigation-btn btn-next">
            Наступний тиждень <i class="bi bi-arrow-right"></i>
        </a>
    </div>
</div>

@if (ViewBag.IsStudent)
{
    <div class="card mb-4">
        <div class="card-body">
            @if (ViewBag.StudentGroup != null)
            {
                <div class="alert alert-info">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <i class="bi bi-info-circle"></i>
                            Ви переглядаєте розклад для групи <strong>@ViewBag.StudentGroup.Name</strong>
                            @if (ViewBag.StudentSubgroup != null)
                            {
                                <span> / підгрупи <strong>@ViewBag.StudentSubgroup.Name</strong></span>
                            }
                        </div>

                        @if (ViewBag.StudentSubgroup != null)
                        {
                            <div class="form-check form-switch">
                                <input class="form-check-input" type="checkbox" id="toggleSubgroupFilter"
                                @(ViewBag.FilterBySubgroup ? "checked" : "")>
                                <label class="form-check-label" for="toggleSubgroupFilter">
                                    Показувати тільки події моєї підгрупи
                                </label>
                            </div>
                        }
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-warning">
                    <i class="bi bi-exclamation-triangle"></i> Ви не призначені до жодної групи. Зверніться до адміністратора.
                </div>
            }
        </div>
    </div>
}

@if (ViewBag.IsTeacher)
{
    <div class="card mb-4">
        <div class="card-body">
            <div class="form-check form-switch">
                <input class="form-check-input" type="checkbox" id="toggleMyEvents" @(ViewBag.ShowOnlyMine ? "checked" : "")>
                <label class="form-check-label" for="toggleMyEvents">
                    Показувати тільки мої події
                </label>
            </div>
            @if (ViewBag.CurrentTeacher != null)
            {
                <div class="mt-2 text-muted">
                    Викладач: @ViewBag.CurrentTeacher.LastName @ViewBag.CurrentTeacher.FirstName
                </div>
            }
        </div>
    </div>
}

<div class="table-responsive">
    <table class="table table-bordered">
        <thead>
            <tr>
                <th style="width: 100px;">Час</th>
                @foreach (var day in weekDays)
                {
                    <th style="width: 14%;" class="text-center @(day.Date == DateTime.Today ? "table-primary" : "")">
                        @day.ToString("dddd") <br>
                        <small>@day.ToString("dd.MM.yyyy")</small>
                    </th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var timeSlot in timeSlots)
            {
                <tr>
                    <td class="align-middle text-center fw-bold">@timeSlot.Label</td>

                    @foreach (var day in weekDays)
                    {
                        <td class="event-cell create-event-cell"
                            data-date="@day.ToString("yyyy-MM-dd")"
                            data-time="@timeSlot.Start.ToString(@"hh\:mm")"
                            data-schedule-id="@Model.Id">
                            @if (weeklySchedule[day][timeSlot.Start].Count > 0)
                            {
                                @foreach (var eventItem in weeklySchedule[day][timeSlot.Start])
                                {
                                    <div class="event-card event-item" style="border-color: @GetEventColor(eventItem)" data-event-id="@eventItem.Id">
                                        <div class="event-header" style="background-color: @GetEventColor(eventItem)">
                                            <h6 class="mb-0 text-white">@eventItem.Title</h6>
                                        </div>
                                        <div class="event-body">
                                            <p class="mb-1"><i class="bi bi-person-fill"></i> @eventItem.Teacher.LastName @eventItem.Teacher.FirstName[0].</p>
                                            <p class="mb-1"><i class="bi bi-book-fill"></i> @eventItem.Course.Name</p>
                                            <p class="mb-1"><i class="bi bi-building-fill"></i> @eventItem.Classroom.Name</p>
                                            <p class="mb-0">
                                                <i class="bi bi-people-fill"></i>
                                                @string.Join(", ", eventItem.EventGroups.Select(eg => eg.Group.Name))
                                                @if (eventItem.SubgroupEvents != null && eventItem.SubgroupEvents.Any())
                                                {
                                                    <span class="badge bg-info ms-1">
                                                        Підгрупи: @string.Join(", ", eventItem.SubgroupEvents.Select(se => se.Subgroup.Name))
                                                    </span>
                                                }
                                            </p>
                                        </div>
                                    </div>
                                }
                            }
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>
<!-- Модальне вікно для створення/перегляду подій -->
<div class="modal fade" id="eventModal" tabindex="-1" aria-labelledby="eventModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div id="eventModalContent">
                <!-- Тут буде завантажений контент модального вікна -->
            </div>
        </div>
    </div>
</div>

<div>
    <a asp-action="Index" class="btn btn-secondary">Повернутися до списку</a>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <style>
        .event-cell {
            height: 150px;
            vertical-align: top;
            padding: 5px;
            cursor: pointer;
        }

        .event-card {
            border-radius: 4px;
            overflow: hidden;
            border-left: 4px solid;
            margin-bottom: 5px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .event-header {
            padding: 5px 8px;
            color: white;
        }

        .event-body {
            padding: 8px;
            background-color: white;
            font-size: 0.8rem;
        }

        .event-body p {
            margin-bottom: 0.25rem;
        }

        th {
            background-color: #f8f9fa;
        }

        .create-event-cell:hover {
            background-color: #f0f8ff;
        }

        .form-check-input {
            cursor: pointer;
        }

        .form-switch .form-check-input {
            width: 3em;
            height: 1.5em;
        }

        .form-switch .form-check-input:checked {
            background-color: #28a745;
            border-color: #28a745;
        }

        .week-navigation-container {
            display: flex;
            gap: 10px;
            align-items: center;
            justify-content: center;
        }

        .week-navigation-btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            padding: 8px 16px;
            border-radius: 4px;
            font-weight: 500;
            text-decoration: none;
            transition: background-color 0.2s, color 0.2s;
            border: 1px solid transparent;
        }

        .btn-prev {
            background-color: #f8f9fa;
            color: #495057;
            border-color: #e9ecef;
        }

            .btn-prev:hover {
                background-color: #e9ecef;
                color: #212529;
            }

        .btn-current {
            background-color: #007bff;
            color: white;
        }

            .btn-current:hover {
                background-color: #0056b3;
            }

        .btn-next {
            background-color: #28a745;
            color: white;
        }

            .btn-next:hover {
                background-color: #218838;
            }

        .week-navigation-btn i {
            margin: 0 5px;
        }
    </style>
}

@functions {
    public string GetEventColor(Event eventItem)
    {
        // Тут можна задати різні кольори залежно від типу події
        // Наприклад, можна використовувати ID курсу для визначення кольору
        int colorSeed = eventItem.CourseId % 6;

        switch (colorSeed)
        {
            case 0: return "#007bff"; // primary
            case 1: return "#28a745"; // success
            case 2: return "#dc3545"; // danger
            case 3: return "#ffc107"; // warning
            case 4: return "#17a2b8"; // info
            case 5: return "#6610f2"; // purple
            default: return "#007bff";
        }
    }
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Обробник для перемикача фільтрації за підгрупами
            $("#toggleSubgroupFilter").change(function() {
                var filterBySubgroup = $(this).is(":checked");
                var currentUrl = new URL(window.location.href);

                // Оновлюємо або додаємо параметр filterBySubgroup в URL
                currentUrl.searchParams.set("filterBySubgroup", filterBySubgroup);

                // Перенаправляємо на оновлений URL
                window.location.href = currentUrl.toString();
            });

            // Існуючий обробник для перемикача "Показувати тільки мої події"
            $("#toggleMyEvents").change(function() {
                var showOnlyMine = $(this).is(":checked");
                var currentUrl = new URL(window.location.href);

                // Оновлюємо або додаємо параметр showOnlyMine в URL
                currentUrl.searchParams.set("showOnlyMine", showOnlyMine);

                // Перенаправляємо на оновлений URL
                window.location.href = currentUrl.toString();
            });
        });
    </script>
    <script>
        $(document).ready(function() {            
            // Обробник перемикача "Показувати тільки мої події"
            $("#toggleMyEvents").change(function() {
                var showOnlyMine = $(this).is(":checked");
                var currentUrl = new URL(window.location.href);

                // Оновлюємо або додаємо параметр showOnlyMine в URL
                currentUrl.searchParams.set("showOnlyMine", showOnlyMine);

                // Перенаправляємо на оновлений URL
                window.location.href = currentUrl.toString();
            });
        });
    </script>
    <script>
        $(document).ready(function() {
            // Обробник кліку на комірку розкладу
            $('.create-event-cell').click(function(e) {
                // Перевіряємо, чи клік був на існуючу подію
                if ($(e.target).hasClass('event-item') || $(e.target).closest('.event-item').length > 0) {
                    // Отримуємо ID події з елемента
                    var eventId = $(e.target).closest('.event-item').data('event-id');

                    // Формуємо URL для деталей події
                    var detailsUrl = '/Event/DetailsModal/' + eventId;

                    // Відкриваємо модальне вікно з деталями події
                    $('#eventModalContent').load(detailsUrl, function() {
                        $('#eventModal').modal('show');
                    });
                } else {
                    // Клік на пусту комірку - створення нової події
                    var date = $(this).data('date');
                    var time = $(this).data('time');
                    var scheduleId = $(this).data('schedule-id');

                    // Формуємо URL для створення події
                    var createUrl = '/Event/CreateModal';

                    // Відкриваємо модальне вікно для створення події
                    $('#eventModalContent').load(createUrl, function() {
                        // Після завантаження модального вікна, заповнюємо поля з даними комірки
                        $('#eventModal').modal('show');

                        // Встановлюємо значення для ScheduleId
                        $('#ScheduleId').val(scheduleId);

                        // Парсимо дату та час з урахуванням локального часового поясу
                        if (date && time) {
                            // Розділяємо час на години та хвилини
                            var timeParts = time.split(':');
                            var hours = parseInt(timeParts[0]);
                            var minutes = parseInt(timeParts[1]);

                            // Створюємо локальний об'єкт дати
                            var dateObj = new Date(date);
                            dateObj.setHours(hours, minutes, 0, 0);

                            // Форматуємо для input type="datetime-local"
                            var startDateTimeStr = dateObj.getFullYear() + '-' +
                                                   padZero(dateObj.getMonth() + 1) + '-' +
                                                   padZero(dateObj.getDate()) + 'T' +
                                                   padZero(dateObj.getHours()) + ':' +
                                                   padZero(dateObj.getMinutes());

                            $('#StartDateTime').val(startDateTimeStr);

                            // Додаємо 80 хвилин (тривалість пари) для EndDateTime
                            var endDateObj = new Date(dateObj.getTime() + 80 * 60000);
                            var endDateTimeStr = endDateObj.getFullYear() + '-' +
                                                 padZero(endDateObj.getMonth() + 1) + '-' +
                                                 padZero(endDateObj.getDate()) + 'T' +
                                                 padZero(endDateObj.getHours()) + ':' +
                                                 padZero(endDateObj.getMinutes());

                            $('#EndDateTime').val(endDateTimeStr);
                        }
                    });
                }
            });

            // Допоміжна функція для додавання нулів перед числами < 10
            function padZero(num) {
                return (num < 10 ? '0' : '') + num;
            }
        });
    </script>
    <script>
        function showEdit(eventId) {
            // Формуємо URL для форми редагування події
            var editUrl = '/Event/EditModal/' + eventId;

            // Закриваємо поточне модальне вікно деталей
            $('#eventModal').modal('hide');

            // Відкриваємо модальне вікно з формою редагування
            setTimeout(function() {
                $('#eventModalContent').load(editUrl, function() {
                    $('#eventModal').modal('show');
                });
            }, 500); // Затримка для коректного закриття попереднього модального вікна
        }</script>
}